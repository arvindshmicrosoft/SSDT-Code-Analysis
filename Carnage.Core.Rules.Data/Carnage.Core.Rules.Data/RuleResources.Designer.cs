//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Carnage.Core.Rules.Data {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class RuleResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RuleResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Carnage.Core.Rules.Data.RuleResources", typeof(RuleResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use SCOPE_IDENTITY() instead of @@IDENTITY global variable to ensure that an accurate IDENTITY value is captured..
        /// </summary>
        internal static string AvoidUsingGlobalVariableForIdentity_ProblemDescription {
            get {
                return ResourceManager.GetString("AvoidUsingGlobalVariableForIdentity_ProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid using the @@IDENTITY variable. .
        /// </summary>
        internal static string AvoidUsingGlobalVariableForIdentity_RuleName {
            get {
                return ResourceManager.GetString("AvoidUsingGlobalVariableForIdentity_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please speak with a DB Engineer or Administrator regarding the use of SET OPTIONS as the automated deployment mechanism will auto set these. Generally SET NOCOUNT ON will be the only one you need to specify..
        /// </summary>
        internal static string AvoidUsingSetOptions_ProblemDescription {
            get {
                return ResourceManager.GetString("AvoidUsingSetOptions_ProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid using SET OPTIONs other than SET NOCOUNT ON|OFF..
        /// </summary>
        internal static string AvoidUsingSetOptions_RuleName {
            get {
                return ResourceManager.GetString("AvoidUsingSetOptions_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid using the WAITFOR DELAY statement. Transactions should not normally be explicitly blocked..
        /// </summary>
        internal static string AvoidWaitForDelay_ProblemDescription {
            get {
                return ResourceManager.GetString("AvoidWaitForDelay_ProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid using the WAITFOR Delay statements in stored procedures, functions and triggers. .
        /// </summary>
        internal static string AvoidWaitForDelay_RuleName {
            get {
                return ResourceManager.GetString("AvoidWaitForDelay_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use SET NOCOUNT ON at the beginning of any SQL batches, stored procedures and triggers that include INSERT, UPDATE, DELETE and SELECT statements. Use SET NOCOUNT OFF at the end of the batch..
        /// </summary>
        internal static string BalancedNumberSetOptionsNoCount_ProblemDescription {
            get {
                return ResourceManager.GetString("BalancedNumberSetOptionsNoCount_ProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ensure balanced SET NOCOUNT statements. .
        /// </summary>
        internal static string BalancedNumberSetOptionsNoCount_RuleName {
            get {
                return ResourceManager.GetString("BalancedNumberSetOptionsNoCount_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t create ResourceManager for {0} from {1}..
        /// </summary>
        internal static string CannotCreateResourceManager {
            get {
                return ResourceManager.GetString("CannotCreateResourceManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SamplesCategory.
        /// </summary>
        internal static string CategorySamples {
            get {
                return ResourceManager.GetString("CategorySamples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only use Unicode characters if your database is going to store non-western Latin characters, but remember we are an International company and you may need to check with regards of possible future use of non-Latin alphabets such as Cyrillic’s (Russian), Greek or Eastern Alphabets..
        /// </summary>
        internal static string CollationProblemDescription {
            get {
                return ResourceManager.GetString("CollationProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Consider usage of Unicode characters. .
        /// </summary>
        internal static string CollationRuleName {
            get {
                return ResourceManager.GetString("CollationRuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column names are not supplied for the insert statement..
        /// </summary>
        internal static string ColumnNameMustBeSpecified_ProblemDescription {
            get {
                return ResourceManager.GetString("ColumnNameMustBeSpecified_ProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column names must be supplied for inserts..
        /// </summary>
        internal static string ColumnNameMustBeSpecified_RuleName {
            get {
                return ResourceManager.GetString("ColumnNameMustBeSpecified_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data types must be lowercased..
        /// </summary>
        internal static string DataTypesMustBeInLowercaseDescription {
            get {
                return ResourceManager.GetString("DataTypesMustBeInLowercaseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data types must be lowercase..
        /// </summary>
        internal static string DataTypesMustBeInLowercaseName {
            get {
                return ResourceManager.GetString("DataTypesMustBeInLowercaseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Table and Query hints are not to be used without the explicit permission of a DB Engineer or Administrator..
        /// </summary>
        internal static string DoNotUseHints_ProblemDescription {
            get {
                return ResourceManager.GetString("DoNotUseHints_ProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid using Table and Query Hints. .
        /// </summary>
        internal static string DoNotUseHints_RuleName {
            get {
                return ResourceManager.GetString("DoNotUseHints_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column numbers/Ordinals found..
        /// </summary>
        internal static string DoNotUseNumbersInOrderBy_ProblemDescription {
            get {
                return ResourceManager.GetString("DoNotUseNumbersInOrderBy_ProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ORDER BY should only use column names, not numbers..
        /// </summary>
        internal static string DoNotUseNumbersInOrderBy_RuleName {
            get {
                return ResourceManager.GetString("DoNotUseNumbersInOrderBy_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid the use of Dynamic SQL..
        /// </summary>
        internal static string DynamicRuleName {
            get {
                return ResourceManager.GetString("DynamicRuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid the use of Dynamic SQL..
        /// </summary>
        internal static string DynamicSqlProblemDescription {
            get {
                return ResourceManager.GetString("DynamicSqlProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please ensure the header is added to the top of the stored procedure or function. SQL scripts without the header will be rejected immediately. .
        /// </summary>
        internal static string Header_ProblemDescription {
            get {
                return ResourceManager.GetString("Header_ProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ensure the [Company] standard header is included for stored procedures and functions. .
        /// </summary>
        internal static string Header_RuleName {
            get {
                return ResourceManager.GetString("Header_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid the use of text, ntext and image data-types; these have been deprecated since SQL 2005. Use char, varchar, nvarchar and varbinary instead..
        /// </summary>
        internal static string InvalidTypesProblemDescription {
            get {
                return ResourceManager.GetString("InvalidTypesProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid the use of TEXT, NTEXT and IMAGE data types..
        /// </summary>
        internal static string InvalidTypesRuleName {
            get {
                return ResourceManager.GetString("InvalidTypesRuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQL keywords must be uppercased, for consistency and readability. .
        /// </summary>
        internal static string KeywordsMustBeInUppercaseDescription {
            get {
                return ResourceManager.GetString("KeywordsMustBeInUppercaseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ensure keywords are uppercased..
        /// </summary>
        internal static string KeywordsMustBeInUppercaseName {
            get {
                return ResourceManager.GetString("KeywordsMustBeInUppercaseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is common practice to use an IDENTITY column as a Primary Key..
        /// </summary>
        internal static string PrimaryKeyProblemDescription {
            get {
                return ResourceManager.GetString("PrimaryKeyProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Consider using IDENTITY on the primary key column. .
        /// </summary>
        internal static string PrimaryKeyRuleName {
            get {
                return ResourceManager.GetString("PrimaryKeyRuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RETURN statement is meant for returning the execution status, and not data. If you wish to return data (particularly a scalar value), use the OUTPUT parameter..
        /// </summary>
        internal static string ReturnStatementPresentRule_ProblemDescription {
            get {
                return ResourceManager.GetString("ReturnStatementPresentRule_ProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ensure that RETURN is used to return status and not data. .
        /// </summary>
        internal static string ReturnStatementPresentRule_RuleName {
            get {
                return ResourceManager.GetString("ReturnStatementPresentRule_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please ensure you use schema prefix when referencing objects..
        /// </summary>
        internal static string SchemaPrefixProblemDescription {
            get {
                return ResourceManager.GetString("SchemaPrefixProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ensure that the schema prefix is used when referencing objects..
        /// </summary>
        internal static string SchemaPrefixRuleName {
            get {
                return ResourceManager.GetString("SchemaPrefixRuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * statement was found, use column names instead..
        /// </summary>
        internal static string SelectStarExpression_ProblemDescription {
            get {
                return ResourceManager.GetString("SelectStarExpression_ProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please ensure that all column names are specified in SELECT statements..
        /// </summary>
        internal static string SelectStarExpression_RuleName {
            get {
                return ResourceManager.GetString("SelectStarExpression_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid the use of aliases unless the table is referenced multiple times. If aliases are to be used select a meaningful name and always specify the AS keyword.
        /// </summary>
        internal static string TableAliasProblemDescription {
            get {
                return ResourceManager.GetString("TableAliasProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid the use of aliases..
        /// </summary>
        internal static string TableAliasRuleName {
            get {
                return ResourceManager.GetString("TableAliasRuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not use Data Definition Language (DDL) within stored procedures. If creating a temporary table consider use of DECLARE instead. .
        /// </summary>
        internal static string UseOfDDLProblemDescription {
            get {
                return ResourceManager.GetString("UseOfDDLProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid the use of Data Definition Language (DDL) in stored procedures..
        /// </summary>
        internal static string UseOfDDLRuleName {
            get {
                return ResourceManager.GetString("UseOfDDLRuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full Text indexes may be supported depending on intended usage. Speak with a Database Engineer on how best to employ them..
        /// </summary>
        internal static string UsingFullTextIndex_ProblemDescription {
            get {
                return ResourceManager.GetString("UsingFullTextIndex_ProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid using full text indexes. .
        /// </summary>
        internal static string UsingFullTextIndex_RuleName {
            get {
                return ResourceManager.GetString("UsingFullTextIndex_RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexed Views are supported provided all objects within the database have been correctly compiled. Speak with a Database Engineer on how best to employ them..
        /// </summary>
        internal static string UsingIndexedViews_ProblemDescription {
            get {
                return ResourceManager.GetString("UsingIndexedViews_ProblemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid using indexed views. .
        /// </summary>
        internal static string UsingIndexedViews_RuleName {
            get {
                return ResourceManager.GetString("UsingIndexedViews_RuleName", resourceCulture);
            }
        }
    }
}
